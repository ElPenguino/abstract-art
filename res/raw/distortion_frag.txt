precision mediump float;

varying vec2 v_texCoord;
uniform sampler2D s_texture;

uniform vec2 resolution;

uniform float u_ampl, u_freq, u_comp;
uniform float u_speed;

uniform vec2 scroll;

uniform int u_dist_type;

void main()
{
	vec2 offset = vec2(0.0, 0.0);
	
	float y = v_texCoord.y * resolution.y;
	
	float dist = (u_ampl * sin(u_freq * y + u_speed));
	
	if(u_dist_type == 0)		// none
	{
		offset.x = 0.0;
	}
	else if(u_dist_type == 1)	// horizontal effect
	{
		offset.x = dist;
	}
	else if(u_dist_type == 2)	// horizontal interlaced effect
	{
		offset.x = floor(mod(y, 2.0)) == 0.0 ? dist : -dist;
	}
	else if(u_dist_type == 3)	// vertical effect
	{
		offset.y = mod(dist, resolution.y);
	}
	else						// well this is awkward
	{
		
	}
	
	offset.y += (y * (u_comp / resolution.y));	// compression effect
	offset += scroll;							// translation effect
	offset /= resolution;						// scale values down to 0.0-1.0
	
	gl_FragColor = texture2D(s_texture, offset + v_texCoord );
}
